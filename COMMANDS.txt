*************************
CLEAN UP LOCAL CACHE
************************
# Delete all containers
docker rm -f $(docker ps -a -q)
# Delete all images
docker rmi -f $(docker images -q)

*************************
BUILD AND SAVE IMAGE
************************
sh /f/_Workspace/Boot2Docker/start.sh
docker build -t thierryn1/private:logging https://raw.githubusercontent.com/ThierryN1/docker/master/DockerBuildFile_Logging.txt

docker push thierryn1/private:logging

**********************************
STARTING CONTAINER FROM AN IMAGE
*********************************
sh /f/_Workspace/Boot2Docker/start.sh
docker pull thierryn1/private:logging
docker run -t -i -p 9200:9200 -p 9300:9300 thierryn1/private:logging /bin/bash

TEST 1
	logstash-1.4.2/bin/logstash -e 'input { stdin { } } output { stdout {} }'
TEST 2
	elasticsearch-1.1.1/bin/elasticsearch & /logstash-1.4.2/bin/logstash -e 'input { stdin { } } output { elasticsearch { host => localhost } }'
CHECK
	curl 'http://localhost:9200/_search?pretty'

*************************
ANOTHER IMAGE BUILD
*************************
sh /f/_Workspace/Boot2Docker/start.sh
docker build -t thierryn1/private:java https://raw.githubusercontent.com/ThierryN1/docker/master/DockerBuildFile_Java.txt
docker push thierryn1/private:java

****************************************************************************************
NODE.JS
*************Image build with Hapi*******************
sh /f/_Workspace/Boot2Docker/start.sh
docker build -t thierryn1/private:hapi https://raw.githubusercontent.com/ThierryN1/docker/master/DockerBuildFile_Hapi.txt
docker push thierryn1/private:hapi

*************starting hapi container ***************
sh /f/_Workspace/Boot2Docker/start.sh //READ THE IP ADDRESS OF THE CONTAINER
docker pull thierryn1/private:hapi
docker run -t -i -p 3000:3000 thierryn1/private:hapi node myHapiProject/startServer.js

TO TEST http://192.168.59.103:3000/
		http://192.168.59.103:3000/Thierry

		
------------------------------------------------------------------------------------------------------	
***************on AWS FilterService for Runscope **************
	
FROM http://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html#install_docker	
AND https://docs.docker.com/examples/nodejs_web_app/	

//THE FILE SHOULD BE Dockerfile WITH NO EXTENSION
//Put the Dockerfile with the code
//The project needs to be built and the node modules checked in

		
LINUX instance
	sudo yum update -y
	sudo yum install -y docker
	sudo service docker start
	sudo usermod -a -G docker ec2-user
	//logout then login
	logout
	//Check if this run
	docker info
	sudo yum install -y git
	git clone https://github.com/ThierryN1/filterService
	cd filterService
	//OPTIONAL check
	cat Dockerfile
	//Build
	docker build -t thierryn1/filterservice . //NO UPERCASE
	//OPTIONAL check
	docker images
	//RUN
	docker run -p 80:80 thierryn1/filterservice
	
//CHECK	
ec2-54-219-141-129.us-west-1.compute.amazonaws.com/filters/1


OR use the AMI
tjnDocker
AND resume from
git clone https://github.com/ThierryN1/filterService
	
***********node old ********************************
sh /f/_Workspace/Boot2Docker/start.sh
docker pull ubuntu
docker run -t -i ubuntu /bin/bash
sudo apt-get update
sudo apt-get install nodejs
sudo apt-get install npm
sudo apt-get install git
sudo ln -s /usr/bin/nodejs /usr/bin/node

node -v
npm -v

npm install hapi

git clone https://github.com/ThierryN1/myHapiProject.git
npm install myHapiProject
cd myHapiProject

node startServer.js



npm install git+https://git@github.com:ThierryN1/myHapiProject.git
npm install git:git@github.com:ThierryN1/myHapiProject.git
git@github.com:ThierryN1/myHapiProject.git

npm install https://github.com/ThierryN1/myHapiProject.git

ip route get 8.8.8.8 | awk '{print $NF; exit}'

********************************* OLD STUFF **************************************************************

sh /f/_Workspace/Boot2Docker/start.s
docker pull ubuntu
docker run -t -i ubuntu /bin/bash

sudo apt-get update
sudo apt-get install default-jre
OR sudo apt-get install default-jdk
java -version

NOT SURE IT IS NEEDED: sudo apt-get install libcurl4-openssl-dev
TRY THIS FIRST: sudo apt-get install curl

DOC http://logstash.net/docs/1.4.2/tutorials/getting-started-with-logstash

LOGSTASH ***************************************************************************
curl -O https://download.elasticsearch.org/logstash/logstash/logstash-1.4.2.tar.gz
tar zxvf logstash-1.4.2.tar.gz
cd logstash-1.4.2

TEST 1
	bin/logstash -e 'input { stdin { } } output { stdout {} }'
	CTRL-C
TEST 2	
	bin/logstash -e 'input { stdin { } } output { stdout { codec => rubydebug } }'

ELASTICSEARCH ******************************************************************************
cd\
curl -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.1.1.tar.gz
tar zxvf elasticsearch-1.1.1.tar.gz
cd elasticsearch-1.1.1/

TEST 1
	elasticsearch-1.1.1/bin/elasticsearch & /logstash-1.4.1/bin/logstash -e 'input { stdin { } } output { elasticsearch { host => localhost } }'
CHECK
	curl 'http://localhost:9200/_search?pretty'


*******************************
https://docs.docker.com/userguide/dockerimages/
